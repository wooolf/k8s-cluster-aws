################################################################
#*
#*  AWS provider definition
#*
################################################################

provider "aws" {
  region = "{{ region }}"

  default_tags {
    tags = {
      "Project name"     = "{{ project.name }}"
      {% for tag in project.default.tags %}
      "{{ tag.key }}" = "{{ tag.value }}"
      {% endfor %}
    }
  }
}


################################################################
#*
#*  AWS NETWORK definition
#*
################################################################


################################################################
#* VPC
################################################################

resource "aws_vpc" "vpc_{{ project.name }}" {
  cidr_block       = "{{ project.network.vpc.cidr_block }}"
  instance_tenancy = "default"
  enable_dns_support = true
  enable_dns_hostnames = true

  tags = {
    {% for tag in project.network.vpc.tags %}
    "{{ tag.key }}" = "{{ tag.value }}"
    {% endfor %}
  }
}

################################################################
#* Subnet
################################################################


resource "aws_subnet" "subnet_{{ project.name }}" {
  vpc_id     = aws_vpc.vpc_{{ project.name }}.id
  cidr_block = "{{ project.network.subnets.cidr_block }}"

  tags = {
    {% for tag in project.network.subnets.tags %}
    "{{ tag.key }}" = "{{ tag.value }}"
    {% endfor %}
  }
}

################################################################
#* Internet Gateway
################################################################

resource "aws_internet_gateway" "gw_{{ project.name }}" {
  vpc_id = aws_vpc.vpc_{{ project.name }}.id

  tags = {
    {% for tag in project.network.internet_gateway.tags %}
    "{{ tag.key }}" = "{{ tag.value }}"
    {% endfor %}
  }
}

################################################################
#* Route table
################################################################

resource "aws_route_table" "route_table_{{ project.name }}" {
  vpc_id = aws_vpc.vpc_{{ project.name }}.id

  tags = {
    {% for tag in project.network.internet_gateway.tags %}
    "{{ tag.key }}" = "{{ tag.value }}"
    {% endfor %}
  }
}

resource "aws_route" "r" {
  route_table_id            = "aws_route_table.route_table_{{ project.name }}.id"
  destination_cidr_block    = "0.0.0.0/0"
  gateway_id                = "aws_internet_gateway.gw_{{ project.name }}.id"
  depends_on                = [aws_route_table.route_table_{{ project.name }}]
}

resource "aws_route_table_association" "rt_association_{{ project.name }}" {
  subnet_id      = "aws_subnet.subnet_{{ project.name }}.id"
  route_table_id = "aws_route_table.route_table_{{ project.name }}.id"
}

################################################################
#* Security group
################################################################

resource "aws_security_group" "sg_{{ project.name }}" {
  name        = "sg_{{ project.name }}"
  description = "Security group for {{ project.name }}"
  vpc_id      = aws_vpc.vpc_{{ project.name }}.id

  {% for sgs in project.network.security_groups.ingress_protocol %}
    {% for elements in project.network.security_groups.ingress_protocol[sgs] %}
      ingress{
      protocol = "{{ sgs }}"
      {% if sgs == "all" %}
        {% for key, value in elements.items() %}
            {{ key }} = ["{{ value }}"]
            from_port         = 0
            to_port           = 65535     
        {% endfor %}  
      {% else %}
        {% for key, value in elements.items() %}
            {% if key == "cidr_blocks" %}
            {{ key }} = ["{{ value }}"]   
            {% elif key == "port" %}
            from_port = "{{ value }}"
            to_port = "{{ value }}"
            {% endif %}
        {% endfor %}
      {% endif %}
      }
    {% endfor %}
  {% endfor %}

  tags = {
    Name = "{{ project.network.security_groups.name }}"
  }
}

################################################################
#* Load balancer
################################################################

resource "aws_lb" "lb_{{ project.name }}" {
  name               = "{{ project.network.load_balancer.name }}"
  internal           = false
  load_balancer_type = "{{ project.network.load_balancer.type }}"
  security_groups    = [aws_security_group.sg_{{ project.name }}.id]
  subnets            = [aws_subnet.subnet_{{ project.name }}.id]

  enable_deletion_protection = false

  tags = {
    Name = "{{ project.network.load_balancer.name }}"
  }
}

resource "aws_lb_target_group" "{{ project.network.load_balancer.target_group.name }}" {
  name     = "{{ project.network.load_balancer.target_group.name }}"
  port     = {{ project.network.load_balancer.target_group.port }}
  protocol = "{{ project.network.load_balancer.target_group.protocol }}"
  vpc_id   = aws_vpc.vpc_{{ project.name }}.id
  target_type = "{{ project.network.load_balancer.target_group.target_type }}"
}

resource "aws_lb_target_group_attachment" "{{ project.network.load_balancer.group_attachment.name }}" {
  target_group_arn = aws_lb_target_group.{{ project.network.load_balancer.target_group.name }}.arn
  target_id        = "{{ project.network.load_balancer.group_attachment.id }}"
}

resource "aws_lb_listener" "front_end" {
  load_balancer_arn = aws_lb_target_group.{{ project.network.load_balancer.target_group.name }}.arn
  port              = "{{ project.network.load_balancer.listener.port }}"
  protocol          = "{{ project.network.load_balancer.listener.protocol }}"

  default_action {
    type             = "{{ project.network.load_balancer.listener.default_action_type }}"
    target_group_arn = aws_lb_target_group.{{ project.network.load_balancer.target_group.name }}.arn
  }
}