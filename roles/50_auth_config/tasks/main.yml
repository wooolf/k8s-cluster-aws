---
# tasks file for 50_auth_config

- name: Generate config
  block:
    - name: Get Load Balancer endpoint
      ansible.builtin.shell:
        cmd: aws elbv2 describe-load-balancers --load-balancer-arns ${LOAD_BALANCER_ARN} --output text --query 'LoadBalancers[0].DNSName'
      register: lb_endpoint

    - name: Set Load Balancer endpoint variable
      ansible.builtin.set_fact:
        kubernetes_public_address: "{{ lb_endpoint.stdout }}"

    - name: Debug
      debug:
        msg: "LB endpoint: {{ kubernetes_public_address }}"

    - name: Define workers list
      ansible.builtin.set_fact:
        workers:
          - worker-0
          - worker-1
          - worker-2

    - name: Define configuration targets
      ansible.builtin.set_fact:
        config_target:
          - kube-proxy
          - kube-controller-manager
          - kube-scheduler
          - admin

    - name: Workers config
      block:
        - name: Generate config for workers - set cluser
          ansible.builtin.shell:
            cmd: kubectl config set-cluster kubernetes-the-hard-way --certificate-authority=ca.pem --embed-certs=true --server=https://{{ kubernetes_public_address }}:443 --kubeconfig={{ item }}.kubeconfig
            chdir: "{{ playbook_dir }}/workspace/{{ project.name }}/certs/"
          with_items:
            - "{{ workers }}"

        - name: Generate config for workers - set credentials
          ansible.builtin.shell:
            cmd: kubectl config set-credentials system:node:{{ item }} --client-certificate={{ item }}.pem --client-key={{ item }}-key.pem --embed-certs=true --kubeconfig={{ item }}.kubeconfig
            chdir: "{{ playbook_dir }}/workspace/{{ project.name }}/certs/"
          with_items:
            - "{{ workers }}"

        - name: Generate config for workers - set default context
          ansible.builtin.shell:
            cmd: kubectl config set-context default --cluster=kubernetes-the-hard-way --user=system:node:{{ item }} --kubeconfig={{ item }}.kubeconfig
            chdir: "{{ playbook_dir }}/workspace/{{ project.name }}/certs/"
          with_items:
            - "{{ workers }}"

        - name: Workers - use context
          ansible.builtin.shell:
            cmd: kubectl config use-context default --kubeconfig={{ item }}.kubeconfig
            chdir: "{{ playbook_dir }}/workspace/{{ project.name }}/certs/"
          with_items:
            - "{{ workers }}"

    - name: Other services config
      block:
        - name: Generate config - set cluser
          ansible.builtin.shell:
            cmd: kubectl config set-cluster kubernetes-the-hard-way --certificate-authority=ca.pem --embed-certs=true --server=https://127.0.0.1:443 --kubeconfig={{ item }}.kubeconfig
            chdir: "{{ playbook_dir }}/workspace/{{ project.name }}/certs/"
          with_items:
            - "{{ config_target }}"

        - name: Generate config - set credentials
          ansible.builtin.shell:
            cmd: kubectl config set-credentials system:node:{{ item }} --client-certificate={{ item }}.pem --client-key={{ item }}-key.pem --embed-certs=true --kubeconfig={{ item }}.kubeconfig
            chdir: "{{ playbook_dir }}/workspace/{{ project.name }}/certs/"
          with_items:
            - "{{ config_target }}"

        - name: Generate config - set default context
          ansible.builtin.shell:
            cmd: kubectl config set-context default --cluster=kubernetes-the-hard-way --user=system:node:{{ item }} --kubeconfig={{ item }}.kubeconfig
            chdir: "{{ playbook_dir }}/workspace/{{ project.name }}/certs/"
          with_items:
            - "{{ config_target }}"

        - name: Use context
          ansible.builtin.shell:
            cmd: kubectl config use-context default --kubeconfig={{ item }}.kubeconfig
            chdir: "{{ playbook_dir }}/workspace/{{ project.name }}/certs/"
          with_items:
            - "{{ config_target }}"

  when: "'local' in group_names"
  tags:
    - auth_config
